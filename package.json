{
  "name": "prisma-article-example",
  "description": "&lt;&lt;Prisma: 下一代ORM, 不仅仅是ORM>> Demo 仓库",
  "version": "1.0.0",
  "scripts": {
    "reset": "rimraf -rf ./**/prisma/client",
    "flow": "npm run gen:client && npm run build && npm run invoke",
    "gen:client:ci": "npm-run-all --print-label --sequential generate:**",
    "gen:client": "npm-run-all --print-label --parallel generate:**",
    "generate:single": "cd ./src/single-model && prisma db push --preview-feature && prisma generate",
    "generate:multi": "cd ./src/multi-models && prisma db push --preview-feature && prisma generate",
    "generate:advanced": "cd ./src/multi-models-advanced && prisma db push --preview-feature && prisma generate",
    "generate:graphql": "cd ./src/typegraphql-apollo-server && prisma db push --preview-feature && prisma generate",
    "generate:multi-db": "npm run pre-generate:multi-db-key && npm run pre-generate:multi-db-value",
    "generate:with-typeorm": "cd ./src/with-typeorm && prisma db push --preview-feature && prisma generate",
    "generate:with-typegoose": "cd ./src/with-typegoose && prisma db push --preview-feature && prisma generate",
    "pre-generate:multi-db-key": "cd ./src/multi-clients && prisma db push --schema=./prisma-key/schema.prisma --preview-feature && prisma generate --schema=./prisma-key/schema.prisma",
    "pre-generate:multi-db-value": "cd ./src/multi-clients && prisma db push --schema=./prisma-value/schema.prisma --preview-feature && prisma generate --schema=./prisma-value/schema.prisma",
    "build": "npm run compile && npm run init",
    "compile": "rimraf -rf dist && tsc && node copy.js",
    "init": "npm-run-all --print-label --parallel init:**",
    "init:single": "cd dist/src/single-model && prisma db push --preview-feature",
    "init:multi": "cd dist/src/multi-models && prisma db push --preview-feature",
    "init:advanced": "cd dist/src/multi-models-advanced && prisma db push --preview-feature",
    "init:graphql": "cd dist/src/typegraphql-apollo-server && prisma db push --preview-feature",
    "init:multi-db": "npm run pre-init:multi-db-key && npm run pre-init:multi-db-value",
    "init:with-typeorm": "cd dist/src/with-typeorm && prisma db push --preview-feature",
    "init:with-typegoose": "cd dist/src/with-typegoose && prisma db push --preview-feature",
    "__META_EXPLAIN_1__": "command 'prisma db push' will also execute the client generation, so in multi-clients post-build we only copy schema",
    "pre-init:multi-db-key": "cd dist/src/multi-clients && prisma db push --preview-feature --schema=./prisma-key/schema.prisma",
    "pre-init:multi-db-value": "cd dist/src/multi-clients && prisma db push --preview-feature --schema=./prisma-value/schema.prisma",
    "invoke": "npm-run-all --print-label --sequential invoke:**",
    "invoke:single": "node dist/src/single-model/index.js",
    "invoke:multi": "node dist/src/multi-models/index.js",
    "invoke:advanced": "node dist/src/multi-models-advanced/index.js",
    "invoke:multi-db": "node dist/src/multi-clients/index.js",
    "invoke:with-typeorm": "cross-env NODE_ENV=prod node dist/src/with-typeorm/index.js",
    "invoke:with-typegoose": "node dist/src/with-typegoose/index.js",
    "dev": "nodemon ./src/typegraphql-apollo-server/server.ts",
    "seed": "cd ./src/typegraphql-apollo-server && prisma db seed --preview-feature",
    "gen:code": "graphql-codegen --config codegen.yml",
    "gen:genql": "genql --endpoint http://localhost:5999/graphql --output ./src/typegraphql-apollo-server/generated/genql",
    "test": "jest --forceExit",
    "pretest": "cd ./src/typegraphql-apollo-server && rimraf -rf todo.sqlite && prisma db push --preview-feature && prisma db seed --preview-feature"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/linbudu599/Prisma-Article-Example.git"
  },
  "author": "linbudu599",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/linbudu599/Prisma-Article-Example/issues"
  },
  "homepage": "https://github.com/linbudu599/Prisma-Article-Example#readme",
  "dependencies": {
    "@apollo/client": "^3.3.12",
    "@genql/runtime": "^2.5.0",
    "@prisma/client": "^2.19.0",
    "@typegoose/typegoose": "^7.6.0",
    "apollo-server": "^2.21.2",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "dotenv": "^8.2.0",
    "graphql": "^15.5.0",
    "mongoose": "^5.10.18",
    "pg": "^8.5.1",
    "prisma": "^2.19.0",
    "reflect-metadata": "^0.1.13",
    "sqlite3": "^5.0.2",
    "type-graphql": "^1.1.1",
    "typedi": "^0.10.0",
    "typeorm": "^0.2.31",
    "typeorm-typedi-extensions": "^0.4.1",
    "typescript": "^4.2.3",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@genql/cli": "^2.5.0",
    "@graphql-codegen/add": "^2.0.2",
    "@graphql-codegen/cli": "^1.21.3",
    "@graphql-codegen/fragment-matcher": "^2.0.1",
    "@graphql-codegen/introspection": "^1.18.1",
    "@graphql-codegen/time": "^2.0.2",
    "@graphql-codegen/typescript": "^1.21.1",
    "@graphql-codegen/typescript-operations": "^1.17.15",
    "@graphql-codegen/typescript-react-apollo": "^2.2.3",
    "@graphql-codegen/typescript-resolvers": "^1.19.0",
    "@types/jest": "^26.0.21",
    "@types/mongoose": "^5.10.4",
    "@types/node": "^14.14.35",
    "@types/uuid": "^8.3.0",
    "apollo-server-testing": "^2.21.2",
    "chalk": "^4.1.0",
    "cross-env": "^7.0.3",
    "dotenv": "^8.2.0",
    "esbuild-node-tsc": "^1.2.0",
    "fs-extra": "^9.1.0",
    "jest": "^26.6.3",
    "nodemon": "^2.0.7",
    "npm-run-all": "^4.1.5",
    "ora": "^5.4.0",
    "react": "^17.0.1",
    "ts-jest": "^26.5.4",
    "ts-node": "^9.1.1",
    "typegraphql-prisma": "^0.12.0"
  }
}
